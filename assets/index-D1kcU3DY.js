import{_ as i}from"./ValaxyMain.vue_vue_type_style_index_0_lang-CJwb-j0h.js";import{_ as d,u as b,c as k,w as s,p as h,o as u,a as e,b as l,d as t,r as o,e as w}from"./app-t0WzKcrM.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-CJldLY-7.js";import"./YunCard.vue_vue_type_script_setup_true_lang-CgAMBqk4.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-CQr6kV1W.js";import"./index-C7yU5XnD.js";const y="/assets/buildProcess-CsrxVuLB.jpeg",de=JSON.parse('{"title":"webpack基础学习","description":"","frontmatter":{"title":"webpack基础学习","date":"2021-03-12T00:00:00.000Z","categories":["工具"],"tags":["Webpack"]},"headers":[{"level":2,"title":"webpack 是什么","slug":"webpack-是什么","link":"#webpack-是什么","children":[]},{"level":2,"title":"为什么使用 webpack","slug":"为什么使用-webpack","link":"#为什么使用-webpack","children":[]},{"level":2,"title":"webpack 的安装","slug":"webpack-的安装","link":"#webpack-的安装","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"webpack 4.X 的安装","slug":"webpack-4-x-的安装","link":"#webpack-4-x-的安装","children":[]},{"level":3,"title":"webpack 的启动","slug":"webpack-的启动","link":"#webpack-的启动","children":[]}]},{"level":2,"title":"webpack 的概念","slug":"webpack-的概念","link":"#webpack-的概念","children":[{"level":3,"title":"构建流程","slug":"构建流程","link":"#构建流程","children":[]},{"level":3,"title":"webpack 核心概念","slug":"webpack-核心概念","link":"#webpack-核心概念","children":[]}]}],"relativePath":"pages/posts/webpack-base/index.md","path":"/home/runner/work/xzc-blog/xzc-blog/pages/posts/webpack-base/index.md","lastUpdated":1709257929000}'),c=JSON.parse('{"title":"webpack基础学习","description":"","frontmatter":{"title":"webpack基础学习","date":"2021-03-12T00:00:00.000Z","categories":["工具"],"tags":["Webpack"]},"headers":[{"level":2,"title":"webpack 是什么","slug":"webpack-是什么","link":"#webpack-是什么","children":[]},{"level":2,"title":"为什么使用 webpack","slug":"为什么使用-webpack","link":"#为什么使用-webpack","children":[]},{"level":2,"title":"webpack 的安装","slug":"webpack-的安装","link":"#webpack-的安装","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"webpack 4.X 的安装","slug":"webpack-4-x-的安装","link":"#webpack-4-x-的安装","children":[]},{"level":3,"title":"webpack 的启动","slug":"webpack-的启动","link":"#webpack-的启动","children":[]}]},{"level":2,"title":"webpack 的概念","slug":"webpack-的概念","link":"#webpack-的概念","children":[{"level":3,"title":"构建流程","slug":"构建流程","link":"#构建流程","children":[]},{"level":3,"title":"webpack 核心概念","slug":"webpack-核心概念","link":"#webpack-核心概念","children":[]}]}],"relativePath":"pages/posts/webpack-base/index.md","path":"/home/runner/work/xzc-blog/xzc-blog/pages/posts/webpack-base/index.md","lastUpdated":1709257929000}'),_={name:"pages/posts/webpack-base/index.md",data(){return{data:c,frontmatter:c.frontmatter,$frontmatter:c.frontmatter}},setup(){const a=b();a.meta.frontmatter=Object.assign(a.meta.frontmatter,c.frontmatter),h("pageData",c)}},E={id:"webpack-是什么",tabindex:"-1"},g=e("p",null,"webpack 是一种前端资源构建工具，一个静态模块打包器（module bundler）。在 webpack 看来，前端的所有资源文件（js 、json 、css 、img 、less 等）都会作为模块处理。他将根据模块的依赖关系进行静态分析，打包生成对应的静态资源（bundle）。简单的来说，webpack 就是一个模块打包处理器，将不同的模块打包成浏览器可识别的资源。",-1),m={id:"为什么使用-webpack",tabindex:"-1"},f=e("p",null,"现代浏览器只能识别 js、json 文件，对于一些文件（css 、less 等）以及语言用法（es6 的 module 等）都无法识别。开发人员只能针对不同的情况，使用不同的工具将其编译成浏览器可以识别的代码。而单独维护这些工具不仅会造成工作量增加，还会遇到各种问题。所以前端人员就有了构建工具的想法，构建工具包含了前面提到的所有小的工具，使用时只需维护构建工具即可。常见的构建工具有 webpack 、rollup、vite 等。",-1),F={id:"webpack-的安装",tabindex:"-1"},v={id:"环境准备",tabindex:"-1"},C=e("p",null,"只需要 nodeJS，建议升级到最新的稳定版本。因为 webpack 是基于 nodeJS 的，属于 nodeJS 的一种应用，所以 nodeJS 版本的新旧会影响到 webpack 的性能。",-1),x={id:"webpack-4-x-的安装",tabindex:"-1"},P=e("div",{class:"language-shell"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"shell"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#B392F0"}},"//"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"局部安装方式"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"推荐")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#B392F0"}},"npm"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"install"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"webpack"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"webpack-cli"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#79B8FF"}},"-D")]),l(`
`),e("span",{class:"line"}),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#B392F0"}},"//"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"全局安装方式")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#B392F0"}},"npm"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"install"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"webpack"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"webpack-cli"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#79B8FF"}},"-g")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#6F42C1"}},"//"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"局部安装方式"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"推荐")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#6F42C1"}},"npm"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"install"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"webpack"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"webpack-cli"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#005CC5"}},"-D")]),l(`
`),e("span",{class:"line"}),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#6F42C1"}},"//"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"全局安装方式")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#6F42C1"}},"npm"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"install"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"webpack"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"webpack-cli"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#005CC5"}},"-g")])])]),e("button",{class:"collapse"})],-1),B=e("p",null,"当我们全局安装 webpack 时，webpack 的版本号就会固定，而不同的项目所依赖 webpack 的版本号可能不同。当项目依赖的 webpack 版本号与全局安装 webpack 的版本号不同时，会很容易发生打包错误，所以推荐局部安装方式。",-1),$={id:"webpack-的启动",tabindex:"-1"},j=e("p",null,"启动 webpack 前需要注意，webpack 的打包是需要入口文件的，默认为 src 目录下的 index.js 文件。",-1),N=e("p",null,"启动方式一：",-1),O=e("div",{class:"language-shell"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"shell"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#B392F0"}},"npx"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"webpack")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#6F42C1"}},"npx"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"webpack")])])]),e("button",{class:"collapse"})],-1),D=e("p",null,"启动方式二：",-1),S=e("p",null,"先在 package.json 文件下的 script 项下设置命令，如 build 命令：",-1),J=e("div",{class:"language-json"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"json"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#6A737D"}},"//package.json")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9ECBFF"}},'"script"'),e("span",{style:{color:"#E1E4E8"}},": {")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#E1E4E8"}},"  "),e("span",{style:{color:"#79B8FF"}},'"build"'),e("span",{style:{color:"#E1E4E8"}},": "),e("span",{style:{color:"#9ECBFF"}},'"webpack"')]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#E1E4E8"}},"}")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#6A737D"}},"//package.json")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#032F62"}},'"script"'),e("span",{style:{color:"#24292E"}},": {")]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#24292E"}},"  "),e("span",{style:{color:"#005CC5"}},'"build"'),e("span",{style:{color:"#24292E"}},": "),e("span",{style:{color:"#032F62"}},'"webpack"')]),l(`
`),e("span",{class:"line"},[e("span",{style:{color:"#24292E"}},"}")])])]),e("button",{class:"collapse"})],-1),V=e("p",null,"然后使用所设置的脚本命令来启动：",-1),M=e("div",{class:"language-shell"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"shell"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#B392F0"}},"npm"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"run"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"build")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#6F42C1"}},"npm"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"run"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"build")])])]),e("button",{class:"collapse"})],-1),L={id:"webpack-的概念",tabindex:"-1"},z={id:"构建流程",tabindex:"-1"},U=e("p",null,"我们开发的项目中，一般都会有入口文件，webpack 会以入口文件为起始点开始打包，他会将入口文件中的依赖、依赖中的依赖等记录好，形成树状结构的依赖关系图。然后 webpack 会根据依赖关系图的先后顺序，依次引入依赖的资源，形成 chunk（代码块）。接着对 chunk 进行不同的处理（比如将 less 编译成 css 、将 js 中的语法编译成浏览器可识别的语法等），这些不同的处理可以统一称为打包。打包处理好后输出的资源叫做 bundle，便可以在浏览器中运行了。",-1),X=e("p",null,[e("img",{src:"",alt:"构建流程"}),e("img",{src:y,alt:"buildProcess"})],-1),A={id:"webpack-核心概念",tabindex:"-1"},T={id:"entry",tabindex:"-1"},W=e("p",null,"Entry（入口）指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。",-1),Z={id:"output",tabindex:"-1"},I=e("p",null,"Output（输出）指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。",-1),R={id:"loader",tabindex:"-1"},q=e("p",null,"Loader 让 webpack 能够去处理那些非 js、json 文件。",-1),G={id:"plugins",tabindex:"-1"},H=e("p",null,"Plugins（插件）可以用于执行范围更广的任务。插件的范围包括：打包优化、压缩、重新定义环境重的变量等。",-1),K={id:"mode",tabindex:"-1"},Q=e("p",null,"Mode（模式）指示 webpack 使用相应模式的配置。",-1),Y=e("table",null,[e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"选项"),e("th",null,"描述"),e("th",null,"特点")])]),e("tbody",null,[e("tr",null,[e("td",{style:{"text-align":"center"}},"development"),e("td",null,[l("会将 p"),e("wbr"),l("rocess.env.NODE_ENV 的值设为 development。启用 NamedChunksPlugin 和 NameModulesPlugin。")]),e("td",null,"能让代码本地调试运行的环境")]),e("tr",null,[e("td",{style:{"text-align":"center"}},"production"),e("td",null,[l("会将 p"),e("wbr"),l("rocess.env.NODE_ENV 的值设为 production。启用 FlagDependencyUsagePlugin、FlagIncludedChunksPlugin、ModuleConcatenationPlugin、NoEmitOnErrorsPlugin、OccurrenceOrderPlugin、SideEffectsFlagPlugin 和 UglifyJsPlugin。")]),e("td",null,"能让代码优化上线运行的环境")])])],-1);function ee(a,le,se,ae,p,ne){const n=w,r=i;return u(),k(r,{frontmatter:p.frontmatter,data:p.data},{"main-content-md":s(()=>[e("h2",E,[l("webpack 是什么 "),t(n,{class:"header-anchor",href:"#webpack-是什么","aria-label":'Permalink to "webpack 是什么"'},{default:s(()=>[l("​")]),_:1})]),g,e("h2",m,[l("为什么使用 webpack "),t(n,{class:"header-anchor",href:"#为什么使用-webpack","aria-label":'Permalink to "为什么使用 webpack"'},{default:s(()=>[l("​")]),_:1})]),f,e("h2",F,[l("webpack 的安装 "),t(n,{class:"header-anchor",href:"#webpack-的安装","aria-label":'Permalink to "webpack 的安装"'},{default:s(()=>[l("​")]),_:1})]),e("h3",v,[l("环境准备 "),t(n,{class:"header-anchor",href:"#环境准备","aria-label":'Permalink to "环境准备"'},{default:s(()=>[l("​")]),_:1})]),C,e("h3",x,[l("webpack 4.X 的安装 "),t(n,{class:"header-anchor",href:"#webpack-4-x-的安装","aria-label":'Permalink to "webpack 4.X 的安装"'},{default:s(()=>[l("​")]),_:1})]),P,B,e("h3",$,[l("webpack 的启动 "),t(n,{class:"header-anchor",href:"#webpack-的启动","aria-label":'Permalink to "webpack 的启动"'},{default:s(()=>[l("​")]),_:1})]),j,N,O,D,S,J,V,M,e("h2",L,[l("webpack 的概念 "),t(n,{class:"header-anchor",href:"#webpack-的概念","aria-label":'Permalink to "webpack 的概念"'},{default:s(()=>[l("​")]),_:1})]),e("h3",z,[l("构建流程 "),t(n,{class:"header-anchor",href:"#构建流程","aria-label":'Permalink to "构建流程"'},{default:s(()=>[l("​")]),_:1})]),U,X,e("h3",A,[l("webpack 核心概念 "),t(n,{class:"header-anchor",href:"#webpack-核心概念","aria-label":'Permalink to "webpack 核心概念"'},{default:s(()=>[l("​")]),_:1})]),e("h4",T,[l("Entry "),t(n,{class:"header-anchor",href:"#entry","aria-label":'Permalink to "Entry"'},{default:s(()=>[l("​")]),_:1})]),W,e("h4",Z,[l("Output "),t(n,{class:"header-anchor",href:"#output","aria-label":'Permalink to "Output"'},{default:s(()=>[l("​")]),_:1})]),I,e("h4",R,[l("Loader "),t(n,{class:"header-anchor",href:"#loader","aria-label":'Permalink to "Loader"'},{default:s(()=>[l("​")]),_:1})]),q,e("h4",G,[l("Plugins "),t(n,{class:"header-anchor",href:"#plugins","aria-label":'Permalink to "Plugins"'},{default:s(()=>[l("​")]),_:1})]),H,e("h4",K,[l("Mode "),t(n,{class:"header-anchor",href:"#mode","aria-label":'Permalink to "Mode"'},{default:s(()=>[l("​")]),_:1})]),Q,Y]),"main-header":s(()=>[o(a.$slots,"main-header")]),"main-header-after":s(()=>[o(a.$slots,"main-header-after")]),"main-nav":s(()=>[o(a.$slots,"main-nav")]),"main-content":s(()=>[o(a.$slots,"main-content")]),"main-content-after":s(()=>[o(a.$slots,"main-content-after")]),"main-nav-before":s(()=>[o(a.$slots,"main-nav-before")]),"main-nav-after":s(()=>[o(a.$slots,"main-nav-after")]),comment:s(()=>[o(a.$slots,"comment")]),footer:s(()=>[o(a.$slots,"footer")]),aside:s(()=>[o(a.$slots,"aside")]),"aside-custom":s(()=>[o(a.$slots,"aside-custom")]),default:s(()=>[o(a.$slots,"default")]),_:3},8,["frontmatter","data"])}const be=d(_,[["render",ee]]);export{de as __pageData,be as default};
